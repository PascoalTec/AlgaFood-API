# conexão banco de dados
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL75Dialect


spring.session.store-type=none

spring.jackson.deserialization.fail-on-ignored-properties=true
spring.jackson.deserialization.fail-on-unknown-properties=true

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.oauth2/jwks

spring.freemarker.settings.locale=pt_BR

# server.compression.enabled=true

spring.web.resources.add-mappings=false


spring.datasource.username=root
spring.datasource.password=admin

#cria as tabelas automaticamente
spring.jpa.generate-ddl=true

#Especifica em qual localização o flyway encontre os scripts de migration e callback
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

#Dropa as tabelas e recria sempre que a aplicação se reinicia
spring.jpa.hibernate.ddl-auto=create

#Mostra os sqls gerados
#spring.jpa.show-sql=true



#Profile que você quer definir para atuar local ou produção
spring.profiles.active=dsv



algafood.storage.tipo=local
algafood.storage.local.diretorio-fotos=/Users/Bessa/Desktop/catalogo

algafood.storage.s3.id-chave-acesso=
algafood.storage.s3.chave-acesso-secreta=
algafood.storage.s3.bucket=algafood-leo
algafood.storage.s3.regiao=us-east-1
algafood.storage.s3.diretorio-fotos=catalogo

#endereço smtp
spring.mail.host=email-smtp.us-east-1.amazonaws.com
spring.mail.port=2587
spring.mail.username=AKIAQXUIXWCFR24UNOHV
spring.mail.password=${AWS_EMAILSECRETPW}

algafood.email.remetente=kessao646@gmail.com
algafood.email.impl=fake

algafood.email.sandbox.destinatario=teste@algafood.com.br


spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

server.compression.enabled=true

# log

# logging.loggly.token=fab8aa76-c960-4542-836c-df6cc1f92c16
#logging.level.org.springframework=DEBUG

springdoc.oAuthFlow.authorizationUrl=http://127.0.0.1:8080/oauth2/authorize
springdoc.oAuthFlow.tokenUrl=http://127.0.0.1:8080/oauth2/token

springdoc.swagger-ui.oauth.client-id=algafood-web
springdoc.swagger-ui.oauth.client-secret=web123

springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant=true

springdoc.packages-to-scan=com.algaworks.algafood.api.v1
springdoc.paths-to-match=/v1/**